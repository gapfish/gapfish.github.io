#%RAML 0.8
---
title: GapFish API
version: v1
baseUri: https://api.gapfish.com/{version}
#List of media type to support
mediaType:  application/json
#List of protocols to support for baseUri
protocols: [ HTTPS ]

securitySchemes:
  - oauth_2_0:
      description: |
        OAuth2 is a protocol that lets external apps request authorization to private
        details in a user's GitHub account without getting their password. This is
        preferred over Basic Authentication because tokens can be limited to specific
        types of data, and can be revoked by users at any time.
      type: OAuth 2.0
      describedBy:
        headers:
          Authorization:
            description: |
              Used to send a valid OAuth 2 access token. Do not use together with
              the "access_token" query string parameter.
            type: string
        queryParameters:
          access_token:
            description: |
              Used to send a valid OAuth 2 access token. Do not use together with
              the "Authorization" header
            type: string
        responses:
          404:
            description: Unauthorized
      settings:
        authorizationUri: https://github.com/login/oauth/authorize
        accessTokenUri: https://github.com/login/oauth/access_token
        authorizationGrants: [ code, token ]
        scopes:
          - "user"
          - "user:email"
          - "user:follow"
          - "public_repo"
          - "repo"
          - "repo:status"
          - "delete_repo"
          - "notifications"
          - "gist"
securedBy: [ oauth_2_0 ]

/user:
  get:
    description: Get the authenticated user.
    responses:
      200:
        body:
          schema: |
            {
                "$schema": "http://json-schema.org/draft-03/schema",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "stats": {
                        "properties": {
                            "balance": {
                                "type": "float"
                            }
                        },
                        "type": "object"
                    }
                }
            }
          example: |
            {
              "login": "octocat",
              "id": 1,
              "avatar_url": "https://github.com/images/error/octocat_happy.gif",
              "gravatar_id": "somehexcode",
              "url": "https://api.github.com/users/octocat",
              "name": "monalisa octocat",
              "company": "GitHub",
              "blog": "https://github.com/blog",
              "location": "San Francisco",
              "email": "octocat@github.com",
              "hireable": false,
              "bio": "There once was...",
              "public_repos": 2,
              "public_gists": 1,
              "followers": 20,
              "following": 0,
              "html_url": "https://github.com/octocat",
              "created_at": "2008-01-14T04:33:35Z",
              "type": "User",
              "total_private_repos": 100,
              "owned_private_repos": 100,
              "private_gists": 81,
              "disk_usage": 10000,
              "collaborators": 8,
              "plan": {
                "name": "Medium",
                "space": 400,
                "collaborators": 10,
                "private_repos": 20
              }
            }

/installations:
  get:
    description: Get a list of installations for the current user
    queryParameters:
    responses:
      200:
        body:
          schema:
          #schema
          #example: !include schema/product-list.json
          #
  post:
    description: create a new installation

  put:
    description: update a given installation

