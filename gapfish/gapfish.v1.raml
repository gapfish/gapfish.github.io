#%RAML 0.8
---
title: GapFish API
version: v1
baseUri: https://api.gapfish.com/{version}
#List of media type to support
mediaType:  application/vnd.api+json
#List of protocols to support for baseUri
protocols: [ HTTPS ]

schemas:
  - installationPost: !include schemas/installationPost.json
  - installationPostResponse: !include schemas/installationPostResponse.json
  - mediaPostResponse: !include schemas/mediaPostResponse.json
  - userGet: !include schemas/userGet.json
  - userGetResponse: !include schemas/userGetResponse.json

securitySchemes:
  - oauth2:
      description: |
        OAuth2 is a protocol that lets external apps request authorization to private
        details in a user's GitHub account without getting their password. This is
        preferred over Basic Authentication because tokens can be limited to specific
        types of data, and can be revoked by users at any time.
      type: OAuth 2.0
      describedBy:
        headers:
          Authorization:
            description: |
              Used to send a valid OAuth 2 access token. Do not use together with
              the "access_token" query string parameter.
            type: string
        queryParameters:
          access_token:
            description: |
              Used to send a valid OAuth 2 access token. Do not use together with
              the "Authorization" header
            type: string
        responses:
          403:
            description: Forbidden - request was unauthorized
      settings:
        authorizationUri: https://api.gapfish.com/v1/oauth/authorize
        accessTokenUri: https://api.gapfish.com/v1/oauth/access_token
        authorizationGrants: [ owner ]

securedBy: [ oauth2 ]

traits:
  - resilient:
      responses:
        422:
          description: |
            unprocessable entity.
            the server cannot make sense of the request, please adhere to the specs
        500:
          description: |
            server error.
            the server screwed up, the devs have been notified
        502:
          description: |
            bad gateway.
            application servers are down or under heavy load, please retry, backing off exponentially


/installations:
  is: [ resilient ]
  post:
    description: create a new installation
    body:
      schema: installationPost
      example: !include examples/installationPost.json
    responses:
      201:
        body:
          schema: installationPostResponse
          example: !include examples/installationPostResponse.json

/media:
  is: [ resilient ]
  post:
    description: create a new media upload
    body:
      multipart/form-data:
        formParameters:
          file:
            description: the file to be uploaded
            required: true
            type: file
          project_id:
            description: the project it is to be associated with
            required: true
            type: string
            example: '54b94bd370d689193f0000c9'
    responses:
      201:
        body:
          schema: mediaPostResponse
          example: !include examples/mediaPostResponse.json

/user:
  is: [ resilient ]
  get:
    description: get the authenticated user
    responses:
      200:
        body:
          schema: userGetResponse
          example: !include examples/userGetResponse.json
